<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TSP Delivery Network Solution</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #5D8696;
            --secondary: #78ABAF;
            --accent: #8FAFCC;
            --highlight: #CCA885;
            --neutral: #D9DAD4;
        }
        body {
            background: #F8F7F2;
            color: #2A2A2A;
        }
        .problem-container {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            margin: 2rem auto;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        .user-process, .ai-process {
            border-left: 4px solid var(--primary);
            padding-left: 1.5rem;
            margin: 2rem 0;
        }
        .user-process { border-color: var(--highlight); }
        .ai-process { border-color: var(--accent); }
        .node-diagram {
            display: flex;
            justify-content: center;
            gap: 10px;
            margin: 2rem 0;
        }
        .node {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }
        .wh-node { background: var(--primary); color: white; }
        .town-node { background: var(--secondary); color: white; }
        .connection {
            stroke: var(--neutral);
            stroke-width: 2px;
        }
        .badge {
            background: var(--highlight);
            color: white;
        }

        .connection {
        stroke: #D9DAD4;
        stroke-width: 2;
        }

       .blocked-connection {
       stroke: #dc3545;
       stroke-width: 2;
       stroke-dasharray: 5,5;
       }

       .wh-node circle {
       fill: #5D8696;
       stroke: #2A2A2A;
       stroke-width: 2;
       }

       .town-node circle {
       fill: #78ABAF;
       stroke: #2A2A2A;
       stroke-width: 2;
       }

       .town-node text,
       .wh-node text {
       pointer-events: none;
       user-select: none;
       }
    </style>
</head>
<body>
    <div class="container py-5">
        <h1 class="text-center mb-4" style="color: var(--primary);">
            Delivery Network Optimization
        </h1>

        <!-- Problem Statement -->
        <div class="problem-container">
            <img src="image.png" alt="Town Network" class="img-fluid mb-4">
            <h3 style="color: var(--primary);">Requirements</h3>
            <ul class="list-group mb-4">
                <li class="list-group-item">Start/end at WH (Warehouse)</li>
                <li class="list-group-item">Visit each town exactly once</li>
                <li class="list-group-item">Avoid D‚ÜíE connection</li>
                <li class="list-group-item">Minimize total distance</li>
            </ul>

            <!-- Connection Calculations -->
            <div class="node-diagram">
                <div class="node wh-node">WH</div>
                <div class="node town-node">A</div>
                <div class="node town-node">B</div>
                <div class="node town-node">C</div>
                <div class="node town-node">D</div>
                <div class="node town-node">E</div>
                <div class="node town-node">F</div>
            </div>
            
            <h5 style="color: var(--secondary);">Node Connections Analysis</h5>
            <table class="table">
                <tr><th>Towns+WH</th><th>Nodes</th><th>Connections</th></tr>
                <tr><td>A,B + WH</td><td>3</td><td>3</td></tr>
                <tr><td>A,B,C + WH</td><td>4</td><td>6</td></tr>
                <tr><td>A,B,C,D + WH</td><td>5</td><td>10</td></tr>
                <tr><td>A-F + WH</td><td>7</td><td>21</td></tr>
            </table>
        </div>

        <!-- User's Process -->
        <div class="problem-container user-process">
            <h3 style="color: var(--highlight);">My Process</h3>
            <div class="mb-4">
                <h5>Initial Attempt:</h5>
                <p>WH ‚Üí A ‚Üí B ‚Üí C ‚Üí D ‚Üí E ‚Üí F ‚Üí WH</p>
                <div class="alert alert-warning">
                    <strong>Problems Found:</strong>
                    <ul>
                        <li>Violates D‚ÜíE restriction</li>
                        <li>Not optimal distance (long backtracking)</li>
                    </ul>
                </div>
            </div>

            <h5>Connection Rules Visualization</h5>
            <div class="node-diagram">
                <div class="node wh-node">WH</div>
                <div class="node town-node">D</div>
                <div class="node town-node">E</div>
                <span class="text-danger">üö´ No direct connection</span>
            </div>
        </div>

        <!-- User Process Diagram -->
        <div class="problem-container user-process">
            <h3 style="color: var(--highlight);">My Initial Route Attempt</h3>
            <div class="text-center position-relative" style="min-height: 400px;">
               <svg width="100%" height="400" viewBox="0 0 600 400">
                 <!-- Nodes -->
                 <circle cx="300" cy="50" r="30" fill="#5D8696"/>
                 <text x="300" y="60" fill="white" text-anchor="middle" font-size="18">WH</text>
      
                 <!-- Your Route Path (Red) -->
                 <path d="M300 50 L150 150 L450 150 L150 250 L450 250 L250 350 L350 350 L300 50" 
                       fill="none" stroke="#dc3545" stroke-width="3" stroke-dasharray="5"/>
      
                 <!-- Blocked Connection -->
                 <line x1="450" y1="250" x2="250" y2="350" stroke="#dc3545" stroke-width="2" stroke-dasharray="5"/>
                 <text x="350" y="300" fill="#dc3545" font-weight="bold">‚ö†Ô∏è Invalid D-E Connection</text>

                 <!-- Town Labels -->
                 <g font-size="14" fill="white" text-anchor="middle">
                   <circle cx="150" cy="150" r="25" fill="#78ABAF"/><text x="150" y="155">A</text>
                   <circle cx="450" cy="150" r="25" fill="#78ABAF"/><text x="450" y="155">B</text>
                   <circle cx="150" cy="250" r="25" fill="#78ABAF"/><text x="150" y="255">C</text>
                   <circle cx="450" cy="250" r="25" fill="#78ABAF"/><text x="450" y="255">D</text>
                   <circle cx="250" cy="350" r="25" fill="#78ABAF"/><text x="250" y="355">E</text>
                   <circle cx="350" cy="350" r="25" fill="#78ABAF"/><text x="350" y="355">F</text>
                 </g>
               </svg>
              </div>
              <p class="text-muted">Issues: Uses blocked D-E connection and creates suboptimal loops</p>
            </div>

        <!-- AI Process -->
        <div class="problem-container ai-process">
            <h3 style="color: var(--accent);">AI-Assisted Solution</h3>
            <div class="row">
                <div class="col-md-6">
                    <h5>Optimized Route:</h5>
                    <div class="alert alert-success">
                        WH ‚Üí A ‚Üí B ‚Üí C ‚Üí D ‚Üí F ‚Üí E ‚Üí WH
                        <span class="badge">Saves 18% distance</span>
                    </div>
                    <ul>
                        <li>Avoids D‚ÜíE dead end</li>
                        <li>Uses nearest-neighbor heuristic</li>
                        <li>Total connections used: 7</li>
                    </ul>
                </div>
                <div class="col-md-6">
                    <h5>Route Visualization</h5>
                    <div class="node-diagram">
                        <div class="node wh-node">WH</div>
                        <div class="node town-node">A</div>
                        <div class="node town-node">B</div>
                        <div class="node town-node">C</div>
                        <div class="node town-node">D</div>
                        <div class="node town-node">F</div>
                        <div class="node town-node">E</div>
                    </div>
                    <p class="text-muted">*Arrows indicate travel direction</p>
                </div>
            </div>
        </div>
    </div>
          <!-- AI Process Diagram -->
          <div class="problem-container ai-process">
            <h3 style="color: var(--accent);">Optimized AI Solution</h3>
            <div class="text-center position-relative" style="min-height: 400px;">
              <svg width="100%" height="400" viewBox="0 0 600 400">
                <!-- Optimized Path (Green) -->
                <path d="M300 50 L150 150 L450 150 L150 250 L450 250 L350 350 L250 350 L300 50" 
                      fill="none" stroke="#28a745" stroke-width="4"/>
      
                <!-- Nodes -->
                <circle cx="300" cy="50" r="30" fill="#5D8696"/>
                <text x="300" y="60" fill="white" text-anchor="middle" font-size="18">WH</text>
      
                <!-- Blocked Connection Still Visible -->
                <line x1="450" y1="250" x2="250" y2="350" stroke="#D9DAD4" stroke-width="2" stroke-dasharray="5"/>

                <!-- Town Labels with Route Numbers -->
                <g font-size="14" fill="white" text-anchor="middle">
                  <circle cx="150" cy="150" r="25" fill="#8FAFCC"/><text x="150" y="155">A</text>
                  <circle cx="450" cy="150" r="25" fill="#8FAFCC"/><text x="450" y="155">B</text>
                  <circle cx="150" cy="250" r="25" fill="#8FAFCC"/><text x="150" y="255">C</text>
                  <circle cx="450" cy="250" r="25" fill="#8FAFCC"/><text x="450" y="255">D</text>
                  <circle cx="250" cy="350" r="25" fill="#8FAFCC"/><text x="250" y="355">E</text>
                  <circle cx="350" cy="350" r="25" fill="#8FAFCC"/><text x="350" y="355">F</text>
                </g>

                <!-- Route Order Numbers -->
                <g font-size="16" fill="#2A2A2A">
                  <text x="225" y="100">‚ûÄ</text>
                  <text x="375" y="100">‚ûÅ</text>
                  <text x="225" y="200">‚ûÇ</text>
                  <text x="375" y="200">‚ûÉ</text>
                  <text x="300" y="325">‚ûÑ</text>
                  <text x="200" y="325">‚ûÖ</text>
                </g>
              </svg>
            </div>
            <p class="text-success">Saves 22% distance by avoiding backtracking</p>
          </div>
</body>
</html>
